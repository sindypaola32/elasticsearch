[[release-highlights]]
== What's new in {minor-version}

Here are the highlights of what's new and improved in {es} {minor-version}!
ifeval::["{release-state}"!="unreleased"]
For detailed information about this release, see the <<es-release-notes>> and
<<breaking-changes>>.

// Add previous release to the list
Other versions:

{ref-bare}/8.9/release-highlights.html[8.9]
| {ref-bare}/8.8/release-highlights.html[8.8]
| {ref-bare}/8.7/release-highlights.html[8.7]
| {ref-bare}/8.6/release-highlights.html[8.6]
| {ref-bare}/8.5/release-highlights.html[8.5]
| {ref-bare}/8.4/release-highlights.html[8.4]
| {ref-bare}/8.3/release-highlights.html[8.3]
| {ref-bare}/8.2/release-highlights.html[8.2]
| {ref-bare}/8.1/release-highlights.html[8.1]
| {ref-bare}/8.0/release-highlights.html[8.0]

endif::[]

// tag::notable-highlights[]

[discrete]
[[cross_cluster_search_provides_details_about_search_on_each_cluster]]
=== Cross-cluster search provides details about search on each cluster
Previously with cross-cluster searches using ccs_minimize_roundtrips=true,
when an error was returned, it was unclear which cluster caused the problem.
We have improved the search response for both synchronous and asynchronous
searches to have status and error details in the `_clusters` section, listing
each cluster involved in the search by name (alias). It includes
status info, shard accounting counts and error information that
are updated incrementally as the search progresses. In case of errors or partial
results, you can use this information to determine to what extent the search
results might be usable and if any follow-up action is needed to reduce errors.

The search on each cluster can be in one of 5 states: `RUNNING`,
`SUCCESSFUL` (all shards were successfully searched), `PARTIAL` (some shard
searches failed, but at least one succeeded and partial data has been returned),
`SKIPPED` (no shards were successfully searched on a cluster marked with
skip_unavailable=true), and `FAILED` (no shards were successfully searched on a
cluster marked with skip_unavailable=false).

Kibana users can access this information by viewing the search response in the Inspect flyout.

{es-pull}97731[#97731]

[discrete]
[[exclude_clusters_from_cross_cluster_search]]
=== Exclude clusters from a cross-cluster search
When doing a cross-cluster search, if you use a wildcard to include a list of clusters, you
can explicitly exclude one or more clusters with a minus sign ('-'). To exclude an entire cluster,
put the minus sign in front of the cluster alias, such as: `remote*:*,-remote3:*,-remote5:*`.
In that case, clusters with the alias "remote3" and "remote5" will be excluded from the search.
For this feature, you must use `*` in the index position or an error will be returned.

{es-pull}97865[#97865]

[discrete]
[[enable_parallel_knn_search_across_segments]]
=== Enable parallel knn search across segments
Elasticsearch has, until now, performed search sequentially across the
segments within each shard. This change makes knn queries faster on shards
that are made of more than one segment by rewriting and collecting each
segment in parallel.

{es-pull}98204[#98204]

// end::notable-highlights[]


[discrete]
[[change_pre_configured_cached_analyzer_components_to_use_indexversion_instead_of_version]]
=== Change pre-configured and cached analyzer components to use IndexVersion instead of Version
As part of ongoing refactoring work, we are separating out various component versions into their own types.
For this, we have introduced a new `IndexVersion` type to represent the version of index data and metadata.

This PR changes the types used to obtain pre-configured components from Version to IndexVersion,
with corresponding changes to method names.

Prior to 8.10, there is a one-to-one mapping between node version and index version, with corresponding constants
in the IndexVersion class.
Starting in 8.10, IndexVersion is versioned independently of node version, and will be a simple incrementing number.
For more information on how to use IndexVersion and other version types, please see the contributing guide.

{es-pull}97319[#97319]

[discrete]
[[api_key_based_cross_cluster_search_replication_beta]]
=== API key based cross-cluster search and replication (Beta)
This <<remote-clusters-api-key,new model>> uses a cross-cluster API key to authenticate
and authorize cross-cluster operations to a remote cluster. It completely separates
network security controls between the local and remote cluster as well as offers
administrators of both the local and the remote cluster fine-grained access controls.

{es-pull}98307[#98307]

